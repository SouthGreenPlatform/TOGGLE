
##########################################
# Block for samTools::samToolsView
##########################################

#Correct variable populating

foreach my $file (@{$fileList}) #Checking the type of files that must be SAM or BAM
{
    if ($file =~ m/sam$|bam$/) # the file type is normally sam of bam
    {
        if ($samFileIn ne "NA") # Already a sam of a bam recognized, but more than one in the previous folder
        {
            toolbox::exportLog("ERROR : $0 : there are more than one single SAM/BAM file at $stepName step.\n",0);
        }
        else
        {
            $samFileIn = $file;
        }
    }
}

if ($samFileIn eq "NA") #No SAM/BAM file found in the previous folder
{
    toolbox::exportLog("ERROR : $0 : No SAM/BAM file found in $previousDir at step $stepName.\n",0);
}

$softParameters = toolbox::extractHashSoft($optionRef,$stepName);                                # recovery of specific parameters of samtools view pair



#Verifying the output type
$extension = ".sam";
$extension = ".bam" if (defined $$softParameters{'-b'}); # If the -b option is specified the output file is a BAM
$samFileOut = "$newDir"."/".$readGroup.".SAMTOOLSVIEW".$extension;                         # name for the output file of samtools view
samTools::samToolsView($samFileIn,$samFileOut,$softParameters);

