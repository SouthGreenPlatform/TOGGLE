##########################################
# gatk HAPLOTYPE CALLER block
##########################################

# Correct variable populating
foreach my $file (@{$fileList}) #Checking the type of files that must be BAM 
{
    if ($file =~ m/bam$/) # the file type is normally bam
    {
        if ($bamFileIn ne "NA") # Already a bam recognized, but more than one in the previous folder
        {
            toolbox::exportLog("INFO : $0 : there are more than one single BAM file at $stepName step.\n",1);
        }
        else
        {
            $bamFileIn = $file;   
        }
    }
}


if ($bamFileIn eq "NA") #No BAM file found in the previous folder
{
    toolbox::exportLog("ERROR : $0 : No BAM file found in $previousDir at step $stepName.\n",0);
}
   

$vcfFileOut = $newDir."/".$readGroup.".GATKHAPLOTYPECALLER.vcf";                                         # name of the first VCF file
$softParameters = toolbox::extractHashSoft($optionRef, "gatkHaplotypeCaller");                         # recovery of specific parameters of gatk haplotype caller
##DEBUG print "###DEBUG : $softParameters";
foreach my $file (@{$fileList})
{
    next if ($file =~ m/bai$/);# The index file
    push (@{$listOfBam},$file); # Picking up the bam files only
    
    my $shortName = toolbox::extractName($file);
    if (!-e $shortName.".bai" && !-e $shortName.".bam.bai") #The BAM is not indexed, required
    {
        samTools::samToolsIndex($file);
    }
    
}
gatk::gatkHaplotypeCaller($refFastaFile, $vcfFileOut, $listOfBam, $softParameters);