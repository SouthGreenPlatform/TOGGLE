
##########################################
# bamutilsTool block
##########################################

#Correct variable populating
foreach my $file (@{$fileList})
{
    if ($file =~ m/bam$|sam$/) # the file type is normally bam or sam
    {
        if ( $samFileIn eq "NA" ) # first sam or bam found
        {
            $samFileIn = $file;
        }
        else
        {
            toolbox::exportLog("ERROR : $0 : there are more than two bam or sam files at $stepName step.\n",0);
        }
    }
}

if ($samFileIn eq "NA" )    # No sam or bam found
{
    toolbox::exportLog("ERROR : $0 : No SAM/BAM file provided at step $stepName\n",0) ;
}
else
{
    my $toolname = lc($stepName);
    $toolname =~ s/bamutils//g;
    $toolname =~ s/\d+//g;
    my $extention = "bam";
    $extention = "bed" if  ($toolname =~ m/bed/i);
    $extention = "fasta" if  ($toolname =~ m/fasta/i);
    $extention = "fastq" if  ($toolname =~ m/fastq/i);
    
    $bamFileOut = $newDir."/"."$readGroup".".bamutils".$toolname.".".$extention;                              # name for the output file of bamutils
    $softParameters = toolbox::extractHashSoft($optionRef,$stepName);                           # recovery of specific parameters of bamutils
    bamutils::bamutilsTool($toolname, $samFileIn, $bamFileOut, $softParameters)
}