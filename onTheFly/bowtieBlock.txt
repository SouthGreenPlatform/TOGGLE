##############################################
# Block for bowtie::bowtie
##############################################

#Correct variable populating
foreach my $file (@{$fileList}) #Checking the type of files that must be FASTQ only
{
	if ($file =~ m/fastq$|fastq.gz$|fq$|fq.gz$/)
	{
		if ($fastqForwardIn ne "NA") # $fastqForwardIn is already known
		{
			if ($fastqReverseIn ne "NA")
			{
				toolbox::exportLog("ERROR : $0 : there are more than two FASTQ files at $stepName step.\n",0);
			}
			else
			{
				$fastqReverseIn = $file;
			}
		}
		else
		{
			$fastqForwardIn = $file;
		}
	}
}


($fileWithoutExtension,$readGroup) = pairing::extractName($fastqForwardIn);		# extract name of file without the extension

$samFileOut = "$newDir"."/"."$readGroup".".BOWTIE.sam";					# name for the output file of bowtie
$softParameters = toolbox::extractHashSoft($optionRef,$stepName);			# recovery of specific parameters of bowtie
if ($fastqReverseIn ne "NA")
{
	bowtie::bowtie($samFileOut,$readGroup,$refFastaFile,$fastqForwardIn,$fastqReverseIn,$softParameters); # generate alignement in SAM format for PE data
}
else
{
	bowtie::bowtie($samFileOut,$readGroup,$refFastaFile,$fastqForwardIn,$softParameters); # generate alignement in SAM format for SE data
}
