
##########################################
# Block for bwa::bwaSampe
##########################################

#Correct variable populating
foreach my $file (@{$fileList}) #Checking the type of files that must be FASTQ only
{
	if ($file =~ m/fastq$|fastq.gz$|fq$|fq.gz$/)
	{
		if ($fastqForwardIn ne "NA") # $fastqForwardIn is already known
		{
			if ($fastqReverseIn ne "NA")
			{
				toolbox::exportLog("ERROR : $0 : there are more than two FASTQ files at $stepName step.\n",0);
			}
			else
			{
				$fastqReverseIn = $file;
			}
		}
		else
		{
			$fastqForwardIn = $file;
		}
	}
	if ($file =~ m/sai$/)
	{
		if ($saiForwardOut ne "NA") # $fastqForwardIn is already known
		{
			if ($saiReverseOut ne "NA")
			{
				toolbox::exportLog("ERROR : $0 : there are more than two SAI files at $stepName step.\n",0);
			}
			else
			{
				$saiReverseOut = $file;
			}
		}
		else
		{
			$saiForwardOut = $file;
		}
	}
}

if ( ($fastqForwardIn eq "NA") || ($fastqReverseIn eq "NA") )	# Only one fastq find error for run bwaSampe
{
	toolbox::exportLog("ERROR : $0 : BWA sampe requires two fastq files.\n",0);
}
else
{
	if ( ($saiForwardOut eq "NA") || ($saiReverseOut eq "NA") ) # There are no .sai, the bwaAln was not performed before
	{
		toolbox::exportLog("ERROR : $0 : BWA sampe requires two sai files.\n",0);
	}
	else #  There are .sai, the bwaAln was performed before
	{
		($fileWithoutExtension,$readGroup) = pairing::extractName($fastqForwardIn);			# extract name of file without the extention

		$samFileOut = "$newDir"."/"."$readGroup".".BWASAMPE.sam";									 # name for the output file of bwa sampe
		$softParameters = toolbox::extractHashSoft($optionRef,$stepName);							 # recovery of specific parameters of bwa sampe
		bwa::bwaSampe($samFileOut,$refFastaFile,$saiForwardOut,$saiReverseOut,$fastqForwardIn,$fastqReverseIn,$readGroup,$softParameters); # generate alignement in SAM format
	}
}
